/**
 * This file contains templates for special files that are generated by the compiler.
 */
export const DEFAULT_404_PAGE = `
export default function NotFound() {
   return <div>
   <h1>404 - Page Not Found</h1>
   </div>;
}        
`;

export const DEFAULT_ERROR_PAGE = `
export default function Error() {
   return <div>
    <h1>Something went wrong</h1>
    </div>;
   }        
`;

export const DEFAULT_PAGE = `
export default function Page() {
   return <div>
   <h1>Hello, welcome</h1>
   </div>;
}        
`;

export const METADATA_FILE_TEMPLATE = `{% macro renderSubRoutes(items) %}{% for subRoute in items %}
        {
          "route": "{{ subRoute.route }}",{% if subRoute.page %}
          "page": () => import("{{ subRoute.page }}"),{% endif %}
          "404": () => import("{{ subRoute['404'] }}"),
          "error": () => import("{{ subRoute.error }}"),{% if subRoute.isAsync is defined %}
          "metadata": {{ subRoute.metadata | dump }},{% endif %}{% if subRoute.subRoutes %}
          "subRoutes": [{{ renderSubRoutes(subRoute.subRoutes) }}]{% endif %}
        }{% if not loop.last %},{% endif %}{% endfor %}{% endmacro %}

export const ROUTE_FILE = {
  "routes": [{% for route in routes -%}
    {
      "route": "{{ route.route }}",{% if route.page %}
      "page": () => import("{{ route.page }}"),{% endif %}
      "404": () => import("{{ route['404'] }}"),
      "error": () => import("{{ route.error }}"),{% if route.metadata %}
      "metadata": {{ route.metadata | dump }},{% endif %}
      {% if route.subRoutes %}"subRoutes": [{{ renderSubRoutes(route.subRoutes) }}]{% endif %}
    }{% if not loop.last %},{% endif %}{% endfor %}
  ]
}`;

export const INDEX_FILE_TEMPLATE = `
export { ROUTE_FILE } from "./route-metadata";
export { adapter, storage } from "./app/adapter";
`;
