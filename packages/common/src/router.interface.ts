import type React from "react";

export type RouteMetadata = {
  title?: string;
  description?: string;
  includeInMenu?: boolean;
};

export const DEFAULT_APP_FOLDER = "app";

export type ClientComponent = React.JSX.Element;

export type ServerComponent = Promise<React.JSX.Element>;

/**
 * Route is a type that represents a route in the application.
 * This is generated by `core` and will be used by `router` to create the routes.
 */
export interface RouteInfo {
  /**
   * The regex pattern that will be used to match the route follow the same standard from next.js.
   * For example, `/user/[id]` will match `/user/1` and `/user/2`.
   */
  route: string;
  /**
   * The path pointing to the file that will be used to render the route.
   */
  filePath: string;
  /**
   * The sub routes of the route.
   */
  subRoutes?: RouteInfo[];
  /**
   * Whether the route is async or not.
   */
  isAsync?: boolean;
  /**
   * The metadata of the route.
   */
  metadata?: RouteMetadata;
}

export interface ImportedRoute extends RouteInfo {
  /**
   * Component
   */
  component: () => ClientComponent | ServerComponent;
}

export interface MatchedRoute extends ImportedRoute {
  /**
   * The params of the route.
   * For example, if the route is `/user/[id]` and the path is `/user/1`, the params will be `{ id: "1" }`.
   */
  params: Record<string, string>;
  /**
   * The query of the route.
   */
  query: Record<string, string>;
}
